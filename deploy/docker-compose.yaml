version: '3.9'

volumes:
  pg_project:
  django_static:

services:
  pg_db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_NAME}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pg_project:/var/lib/postgresql/data


  migrations:

    image: ${DOCKERHUB_USER}/todolist:latest

    env_file:
      - .env
    environment:
      POSTGRES_HOST: pg_db
    depends_on:
      pg_db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    image: ${DOCKERHUB_USER}/todolist:latest
    env_file: .env
    depends_on:
      pg_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully


  collect_static:
    image: ${DOCKERHUB_USER}/todolist:latest
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
      - django_static:/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-36
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/
